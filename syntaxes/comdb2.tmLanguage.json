{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Comdb2",
  "scopeName": "source.csc2",
  "fileTypes": [".csc2"],
  "patterns": [
    {
      "include": "#schema_section"
    },
    {
      "include": "#constants_section"
    },
    {
      "include": "#key_section"
    },
    {
      "include": "#constraints_section"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#types"
    },
    {
      "include": "#constants"
    }
  ],
  "repository": {
    "constants_section": {
      "name": "meta.constants.comdb2",
      "begin": "\\b(constants)\\s*{",
      "end": "}",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.constants.comdb2"
        }
      },
      "patterns": [
        { "include": "#comments" },
        { "include": "#constants" },
        {
          "name": "meta.constants.definition.comdb2",
          "match": "\\s*(\\w+)\\s*=\\s*(\\-?\\d+)",
          "captures": {
            "1": { "name": "constant.other.comdb2" },
            "2": {
              "patterns": [{ "include": "#constants" }]
            }
          }
        }
      ]
    },
    "schema_section": {
      "name": "meta.schema.comdb2",
      "begin": "\\b(schema)\\s*{",
      "end": "}",
      "beginCaptures": {
        "1": { "name": "keyword.other.schema.comdb2" }
      },
      "patterns": [
        { "include": "#comments" },
        { "include": "#keywords" },
        { "include": "#types" },
        {
          "name": "meta.schema.field.integer.comdb2",
          "match": "\\s*(short|u_short|int|u_int|longlong)\\s+(\\w+)(\\s+dbstore\\s*=\\s*(nextsequence|\\-?\\d+|{[a-zA-Z()_]+}))?(\\s+null\\s*=\\s*(yes|no))?",
          "captures": {
            "0": {
              "patterns": [
                { "include": "#types" },
                { "include": "#keywords" },
                { "include": "#constants" }
              ]
            }
          }
        },
        {
          "name": "meta.schema.field.float.comdb2",
          "match": "\\s*(float|double)\\s+(\\w+)(\\s+dbstore\\s*=\\s*(nextsequence|\\-?\\d+\\.\\d+(E(\\+|\\-)\\d+)?|NaN|(\\+|\\-)Inf|{[a-zA-Z()_]+}))?(\\s+null\\s*=\\s*(yes|no))?",
          "captures": {
            "0": {
              "patterns": [
                { "include": "#types" },
                { "include": "#keywords" },
                { "include": "#constants" }
              ]
            }
          }
        },
        {
          "match": "\\s*(decimal32|decimal64|decimal128)\\s+(\\w+)(\\s+dbstore\\s*=\\s*(nexsequence|\\+\\-\\d\\.\\d+x10\\^\\-?\\d+|{[a-zA-Z()_]+}))?(\\s+null\\s*=\\s*(yes|no))?",
          "name": "meta.schema.field.decimal.comdb2",
          "captures": {
            "0": {
              "patterns": [
                { "include": "#types" },
                { "include": "#keywords" },
                { "include": "#constants" }
              ]
            }
          }
        },
        {
          "name": "meta.schema.field.blob.comdb2",
          "patterns": [
            {
              "name": "meta.schema.field.blob.blob.comdb2",
              "match": "\\s*(blob)\\s+(\\w+)(\\s+dbstore\\s*=\\s*(nextsequence|{[a-zA-Z()_]+}|.*))?(\\s+null\\s*=\\s*(yes|no))?",
              "captures": {
                "0": {
                  "patterns": [
                    { "include": "#types" },
                    { "include": "#keywords" },
                    { "include": "#constants" }
                  ]
                }
              }
            },
            {
              "name": "meta.schema.field.blob.byte.comdb2",
              "match": "\\s*(byte)\\s+(\\w+\\[\\d+\\])(\\s+dbstore\\s*=\\s*(nextsequence|{[a-zA-Z()_]+}|.*))?(\\s+null\\s*=\\s*(yes|no))?",
              "captures": {
                "0": {
                  "patterns": [
                    { "include": "#types" },
                    { "include": "#keywords" },
                    { "include": "#constants" }
                  ]
                }
              }
            }
          ]
        },
        {
          "name": "meta.schema.field.text.comdb2",
          "match": "\\s*(cstring|vutf8)\\s+(\\w+\\[\\d+\\])(\\s+dbstore\\s*=\\s*(nextsequence|{[a-zA-Z()_]+}|\".*\"))?(\\s+null\\s*=\\s*(yes|no))?",
          "captures": {
            "0": {
              "patterns": [
                { "include": "#types" },
                { "include": "#keywords" },
                { "include": "#strings" },
                { "include": "#constants" }
              ]
            }
          }
        },
        {
          "name": "meta.schema.field.datetime.comdb2",
          "match": "\\s*(datetime|datetimeus)\\s+(\\w+)(\\s+dbstore\\s*=\\s*(nextsequence|{[a-zA-Z()_]+}|\"(\\-)?\\d{4}\\-\\d{2}\\-\\d{2}(T\\d{2}(\\:\\d{2}(\\:\\d{2}(\\.\\d{3,6})?)?)?)?(\\s[a-zA-Z/_]+)?\"|\"(\\-)?\\d{4}\\-\\d{2}\\-\\d{2}(T\\d{2}(\\d{2}(\\d{2}(\\.\\d{3,6})?)?)?)?(\\s[a-zA-Z/_]+)?\"))?(\\s+null\\s*=\\s*(yes|no))?",
          "captures": {
            "0": {
              "patterns": [
                { "include": "#types" },
                { "include": "#keywords" },
                { "include": "#constants" }
              ]
            }
          }
        }
      ]
    },
    "key_section": {
      "name": "meta.key.comdb2",
      "begin": "\\b(keys)\\s*{",
      "end": "}",
      "beginCaptures": {
        "1": { "name": "keyword.other.keys.comdb2" }
      },
      "patterns": [
        { "include": "#comments" },
        { "include": "#keywords" },
        { "include": "#strings" },
        {
          "name": "meta.key.definition.comdb2",
          "match": "^\\s*((dup)?|(uniqnulls)?)(\\s+datacopy(\\s+\\((\\s*[a-zA-Z0-9_]+\\s*,)*(\\s*[a-zA-Z0-9_]+\\s*)\\)))?\\s+(\".+\")\\s*=(\\s*(<DESCEND>)?\\s*[a-zA-Z0-9_]+\\s*\\+)*(\\s*(<DESCEND>)?\\s*[a-zA-Z0-9_]+)",
          "captures": {
            "0": {
              "patterns": [
                { "include": "#keywords" },
                { "include": "#strings" }
              ]
            }
          }
        }
      ]
    },
    "constraints_section": {
      "name": "meta.constraints.comdb2",
      "begin": "\\b(constraints)\\s*{",
      "end": "}",
      "beginCaptures": {
        "1": { "name": "keyword.other.keys.comdb2" }
      },
      "patterns": [
        { "include": "#comments" },
        { "include": "#keywords" },
        { "include": "#strings" },
        {
          "name": "meta.constraint.definition.comdb2",
          "match": "(\\s*[a-zA-Z0-9_]+\\s*=)?\\s*(\"[a-zA-Z0-9_]+\")\\s*(->)((\\s*(\"[a-zA-Z0-9_]+\")\\s*\\:\\s*(\"[a-zA-Z0-9_]+\"))|(\\s*<(\"[a-zA-Z0-9_]+\")\\s*\\:\\s*(\"[a-zA-Z0-9_]+\")>)+)((\\s+(on\\s+delete\\s+(cascade|restrict|(set\\s+null)))|(on\\s+update\\s+(cascade|restrict))))?",
          "captures": {
            "0": {
              "patterns": [
                { "include": "#keywords" },
                { "include": "#strings" }
              ]
            }
          }
        }
      ]
    },
    "keywords": {
      "name": "keyword.other.comdb2",
      "match": "(\\b(schema|keys|constants|constraints|dbstore|nextsequence|null|dup|uniqnulls|datacopy|where|on|delete|update|cascade|restrict|set|check)\\b|<DESCEND>)"
    },
    "types": {
      "name": "storage.type.comdb2",
      "match": "\\b(double|u_short|short|u_int|int|longlong|datetime|datetimeus|intervalds|intervaldsus|intervalym|decimal32|decimal64|decimal128|cstring|vutf8|blob|byte)\\b"
    },
    "constants": {
      "name": "constant.comdb2",
      "patterns": [
        {
          "name": "constant.datetime.comdb2",
          "match": "\"((\\-)?\\d{4}\\-\\d{2}\\-\\d{2}(T\\d{2}(\\:\\d{2}(\\:\\d{2}(\\.\\d{3,6})?)?)?)?(\\s[a-zA-Z/_]+)?|(\\-)?\\d{4}\\-\\d{2}\\-\\d{2}(T\\d{2}(\\d{2}(\\d{2}(\\.\\d{3,6})?)?)?)?(\\s[a-zA-Z/_]+)?)\""
        },
        {
          "name": "constant.decimal.comdb2",
          "match": "\\+\\-\\d\\.\\d+x10\\^\\-?\\d+"
        },
        {
          "name": "constant.float.comdb2",
          "match": "\\-?\\d+\\.\\d+(E(\\+|\\-)\\d+)?"
        },
        {
          "name": "constant.integer.comdb2",
          "match": "\\-?\\d+"
        },
        {
          "name": "constant.language.comdb2",
          "match": "\\b(yes|no)\\b"
        },
        {
          "name": "constant.other.comdb2",
          "match": "\\b[A-Z0-9_]+\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.comdb2",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.comdb2",
          "match": "\\\\."
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.comdb2",
          "begin": "//",
          "end": "\\n"
        },
        {
          "name": "comment.block.comdb2",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    }
  }
}
