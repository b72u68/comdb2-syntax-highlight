{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Comdb2",
  "scopeName": "source.csc2",
  "fileTypes": [".csc2"],
  "patterns": [
    {
      "include": "#schema"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#type"
    }
  ],
  "repository": {
    "keywords": {
      "name": "keyword.other.comdb2",
      "match": "\\b(schema|keys|constants|constraints|dbstore|null|dup|uniqnulls|datacopy|<DESCEND>|where|on|delete|update|cascade|restrict|set|check)\\b"
    },
    "schema": {
      "name": "meta.schema.comdb2",
      "begin": "(schema)\\s*{",
      "end": "}",
      "beginCaptures": {
        "1": { "name": "keyword.other.schema.comdb2" }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "name": "meta.schema.field.integer.comdb2",
          "match": "\\s*(short|u_short|int|u_int|longlong)\\s+(\\w+)(\\s+dbstore\\s*=\\s*(nextsequence|(\\-)?\\d+)|{[a-zA-Z_]+})?(\\s+null\\s*=\\s*(yes|no))?",
          "captures": {
            "1": { "name": "storage.type.comdb2" }
          }
        },
        {
          "name": "meta.schema.field.float.comdb2",
          "match": "\\s*(float|double)\\s+(\\w+)(\\s+dbstore\\s*=\\s*(nextsequence|(\\-)?\\d+\\.\\d+(E(\\+|\\-)\\d+)?|NaN|(\\+|\\-)Inf|{[a-zA-Z\\(\\)_]+}))?(\\s+null\\s*=\\s*(yes|no))?",
          "captures": {
            "1": { "name": "storage.type.comdb2" }
          }
        },
        {
          "match": "\\s*(decimal32|decimal64|decimal128)\\s+(\\w+)(\\s+dbstore\\s*=\\s*(nexsequence|\\+\\-\\d\\.\\d+x10\\^\\-?\\d+|{[a-zA-Z\\(\\)_]+}))?(\\s+null\\s*=\\s*(yes|no))?",
          "name": "meta.schema.field.decimal.comdb2",
          "captures": {
            "1": { "name": "storage.type.comdb2" }
          }
        },
        {
          "name": "meta.schema.field.blob.comdb2",
          "patterns": [
            {
              "name": "meta.schema.field.blob.blob.comdb2",
              "match": "\\s*(blob)\\s+(\\w+)(\\s+dbstore\\s*=\\s*(nextsequence|{[a-zA-Z\\(\\)_]+}|.*))?(\\s+null\\s*=\\s*(yes|no))?",
              "captures": {
                "1": { "name": "storage.type.comdb2" }
              }
            },
            {
              "name": "meta.schema.field.blob.byte.comdb2",
              "match": "\\s*(byte)\\s+(\\w+\\[\\d+\\])(\\s+dbstore\\s*=\\s*(nextsequence|{[a-zA-Z\\(\\)_]+}|.*))?(\\s+null\\s*=\\s*(yes|no))?",
              "captures": {
                "1": { "name": "storage.type.comdb2" }
              }
            }
          ]
        },
        {
          "name": "meta.schema.field.text.comdb2",
          "match": "\\s*(cstring|vutf8)\\s+(\\w+\\[\\d+\\])(\\s+dbstore\\s*=\\s*(nextsequence|{[a-zA-Z\\(\\)_]+}|\".*\"))?(\\s+null\\s*=\\s*(yes|no))?",
          "captures": {
            "1": { "name": "storage.type.comdb2" }
          }
        }
      ]
    },
    "types": {
      "name": "storage.type.comdb2",
      "match": "(double|u_short|short|u_int|int|longlong|datetime|datetimeus|intervalds|intervaldsus|intervalym|decimal32|decimal64|decimal128|cstring|vutf8|blob|byte)"
    },
    "strings": {
      "name": "string.quoted.double.comdb2",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.comdb2",
          "match": "\\\\."
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.comdb2",
          "begin": "//",
          "end": "\\n"
        },
        {
          "name": "comment.block.comdb2",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    }
  }
}
